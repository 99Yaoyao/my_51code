C51 COMPILER V9.60.7.0   AT24C02                                                           06/12/2023 22:12:35 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE AT24C02
OBJECT MODULE PLACED IN .\Objects\AT24C02.obj
COMPILER INVOKED BY: E:\keil5_MDKorC51\C51\BIN\C51.EXE AT24C02.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\AT24C02.lst) OBJECT(.\Objects\AT24C02.obj)

line level    source

   1          #include "I2C.h"
   2          #include "AT24C02.h"
   3          #include <REGX52.H>
   4          
   5          void AT24C02_writeByte(unsigned char addr, unsigned char byte) // 对从机某个地址写入一个数据
   6          {
   7   1          I2C_start();        // 开始
   8   1          I2C_sendByte(0xA0); // 往I2C总线上发送地址寻找对应从机
   9   1          I2C_receiveAck();   // 从机应答
  10   1          I2C_sendByte(addr); // 发送要写入数据的地址，称为字地址，就是数据存在哪
  11   1          I2C_receiveAck();   // 从机应答
  12   1          I2C_sendByte(byte); // 要在字地址上写入什么数据
  13   1          I2C_receiveAck();   // 从机应答
  14   1          I2C_stop();         // 停止
  15   1      }
  16          
  17          unsigned char AT24C02_readByte(unsigned char addr) // 对从机某个地址读出一个数据,写加读（
             -复合格式）
  18          {
  19   1          unsigned char dat = 0; // 定义一个变量接收读出的数据
  20   1          I2C_start();           // 开始
  21   1          I2C_sendByte(0xA0);    // 发送从机地址+写操作（0为写1为读）等待从机应答
  22   1          I2C_receiveAck();      // 从机应答
  23   1          I2C_sendByte(addr);    // 发送要读的数据所在地址
  24   1          I2C_receiveAck();      // 从机应答
  25   1      
  26   1          I2C_start();             // 再来一个开始
  27   1          I2C_sendByte(0xA1);      // 发送从机地址+读操作等待从机应答
  28   1          I2C_receiveAck();        // 从机应答
  29   1          dat = I2C_receiveByte(); // 从机读出数据所在地址包含的数据并发送出来
  30   1          I2C_sendAck(1);          // 主机不应答
  31   1          I2C_stop();              // 停止
  32   1          return dat;
  33   1      }
  34          
  35          //#include "I2C.h"
  36          //#include <REGX52.H>
  37          ///*
  38          //void AT24C02_writeByte(unsigned char addr,unsigned char dat)//对从机某个地址写入一个数据
  39          //{
  40          //    I2C_start();//开始
  41          //    I2C_send_byte(0xA0);//往I2C总线上发送地址寻找对应从机
  42          //    I2C_receive_ack();//从机应答
  43          //    I2C_send_byte(addr);//发送要写入数据的地址，称为字地址，就是数据存在哪
  44          //    I2C_receive_ack();//从机应答
  45          //    I2C_send_byte(dat);//要在字地址上写入什么数据
  46          //    I2C_receive_ack();//从机应答
  47          //    I2C_stop();//停止
  48          //}
  49          //unsigned char AT24C02_readByte(unsigned char addr)//对从机某个地址读出一个数据,写加读（
             -复合格式）
  50          //{
  51          //    unsigned char dat = 0;//定义一个变量接收读出的数据
  52          //    I2C_start();//开始
C51 COMPILER V9.60.7.0   AT24C02                                                           06/12/2023 22:12:35 PAGE 2   

  53          //    I2C_send_byte(0xA0);//发送从机地址+写操作（0为写1为读）等待从机应答
  54          //    I2C_receive_ack();//从机应答
  55          //    I2C_send_byte(addr);//发送要读的数据所在地址
  56          //    I2C_receive_ack();//从机应答
  57          //    
  58          //    I2C_start();//再来一个开始
  59          //    I2C_send_byte(0xA1);//发送从机地址+读操作等待从机应答
  60          //    I2C_receive_ack();//从机应答
  61          //    dat = I2C_receive_byte();//从机读出数据所在地址包含的数据并发送出来
  62          //    I2C_send_ack(1);//主机不应答
  63          //    I2C_stop();//停止
  64          //    return dat;
  65          //}
  66          
  67          
  68          
  69          
  70          
  71          
  72          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     85    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
