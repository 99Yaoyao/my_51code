C51 COMPILER V9.60.7.0   LCD1602                                                           06/12/2023 22:12:35 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: E:\keil5_MDKorC51\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\LCD1602.lst) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include "LCD1602.h"
   2          #include "Delay.h"
   3          #include <math.h>
   4          
   5          void LCD1602_WriteCommand(unsigned char command)
   6          {
   7   1              LCD_RS = 0;
   8   1              LCD_RW = 0;
   9   1              LCD_EN = 1;
  10   1              LCD_DATA = command;
  11   1              LCD_EN = 0;
  12   1              Delay(1);
  13   1      }
  14          
  15          void LCD1602_WriteData(unsigned char Data)
  16          {
  17   1              LCD_RS = 1;
  18   1              LCD_RW = 0;
  19   1              LCD_EN = 1;
  20   1              LCD_DATA = Data;
  21   1              LCD_EN = 0;
  22   1              Delay(1);
  23   1      }
  24          
  25          void LCD1602_Init(void)
  26          {
  27   1              Delay(1);
  28   1              LCD1602_WriteCommand(0x01); // Ê∏ÖÂ±è
  29   1              LCD1602_WriteCommand(0x38); // ËÆæÁΩÆ8‰ΩçÊï∞ÊçÆÁ∫øÊ®°ÂºèÔºåÊòæÁ§∫‰∏§Ë°åÔºå
  30   1              LCD1602_WriteCommand(0x0C); // ËÆæÁΩÆÊòæÁ§∫ÂºÄÔºåÊó†ÂÖâÊ†áÔºåÂÖâÊ†á‰∏çÈó™ÁÉÅ
  31   1              LCD1602_WriteCommand(0x06); // ËÆæÁΩÆÂÜôÂÖ•Êñ∞Êï∞ÊçÆÂêéÂÖâÊ†áÂè≥ÁßªÔºåÊòæÁ§∫Â±è‰∏çÁßªÂä®
  32   1              Delay(1);
  33   1      }
  34          
  35          /*
  36          ** Function: ËÆæÁΩÆË°åÂàóÂÖâÊ†áÂú®Âì™ÊâìÂç∞
  37          */
  38          void Set_RowandCol(unsigned char row, unsigned char col)
  39          {
  40   1              if (col > 16)
  41   1                      return;
  42   1              if (row == 1)
  43   1              {
  44   2                      LCD1602_WriteCommand(0x80 + (col - 1)); // 0x80ÊòØÂõ†‰∏∫DB7ÈªòËÆ§‰∏∫1ÔºåÊâÄ‰ª•ÊúÄÈ´ò‰ΩçÂõ∫ÂÆö‰∫ÜÔºåÂâ©‰∏
             -ãÁöÑ‰ΩçÁΩÆÂ∞±ÊòØ0x80+0x00Ôºå0x01‚Ä¶‚Ä¶
  45   2              }
  46   1              else if (row == 2)
  47   1              {
  48   2                      LCD1602_WriteCommand(0xC0 + (col - 1)); // 0xC0ÊòØÂõ†‰∏∫DB7ÈªòËÆ§‰∏∫1ÔºåÂâ©‰∏ãÁöÑ‰ΩçÁΩÆÂ∞±ÊòØ0x80+0x40Ôº
             -å0x41‚Ä¶‚Ä¶ÔºåÊâÄ‰ª•ÊòØCÂºÄÂ§¥
  49   2              }
  50   1              else
  51   1                      return;
  52   1      }
C51 COMPILER V9.60.7.0   LCD1602                                                           06/12/2023 22:12:35 PAGE 2   

  53          
  54          void LCD_ShowChar(unsigned char row, unsigned char col, char Char)
  55          {
  56   1              Set_RowandCol(row, col);
  57   1              LCD1602_WriteData(Char);
  58   1      }
  59          
  60          void LCD_ShowString(unsigned char row, unsigned char col, const char *str)
  61          {
  62   1              unsigned int i = 0;
  63   1              Set_RowandCol(row, col);
  64   1              for (i = 0; str[i] != '\0'; i++)
  65   1              {
  66   2                      LCD1602_WriteData(str[i]);
  67   2              }
  68   1      }
  69          
  70          int LCD_Pow(int X, int Y)
  71          {
  72   1              unsigned char i;
  73   1              int Result = 1;
  74   1              for (i = 0; i < Y; i++)
  75   1              {
  76   2                      Result *= X;
  77   2              }
  78   1              return Result;
  79   1      }
  80          
  81          void LCD_ShowNumber(unsigned char row, unsigned char col, unsigned int num)
  82          {
  83   1              unsigned int count = 4;
  84   1              unsigned char tmp = 0;
  85   1              Set_RowandCol(row, col);
  86   1      
  87   1              if (num == 0)
  88   1              {
  89   2                      while (count--)
  90   2                              LCD1602_WriteData('0');
  91   2              }
  92   1              else
  93   1              {
  94   2                      //        tmp = num;
  95   2                      //        while (tmp != 0)
  96   2                      //        {
  97   2                      //            tmp /= 10;
  98   2                      //            count++;
  99   2                      //        }
 100   2                      for (; count > 0; count--)
 101   2                      {
 102   3                              LCD1602_WriteData((num / LCD_Pow(10, count - 1) % 10) + '0');
 103   3                              // powÂáΩÊï∞ËøîÂõûdoubleÂûãÔºåÊµÆÁÇπÂûã‰∏çËÉΩÊ±Ç‰ΩôÔºåÊâÄ‰ª•ÂæóËΩ¨Êç¢Á±ªÂûã
 104   3                              // ÂÅáËÆæ‰º†ÂÖ•123 ÔºåÂàôÊúâ 123 / 100 = 1 % 10 = 1ÔºåÊâìÂç∞ 1
 105   3                              //               Êúâ  123 / 10 = 12 % 10 = 2ÔºåÊâìÂç∞ 2
 106   3                              //              Êúâ   123 / 1 = 123 % 10 = 3ÔºåÊâìÂç∞ 3
 107   3                              // ‰∏çËÉΩÁî®powÂáΩÊï∞Ôºà‰∏çÁü•ÈÅì‰∏∫‰ΩïÔºâ
 108   3                      }
 109   2              }
 110   1      }
 111          
 112          void LCD_ShowNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length)
 113          {
 114   1              unsigned char i;
C51 COMPILER V9.60.7.0   LCD1602                                                           06/12/2023 22:12:35 PAGE 3   

 115   1              Set_RowandCol(Line, Column);
 116   1              for (i = Length; i > 0; i--)
 117   1              {
 118   2                      LCD1602_WriteData(Number / LCD_Pow(10, i - 1) % 10 + '0');
 119   2              }
 120   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    350    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
